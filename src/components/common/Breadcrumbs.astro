---
export interface BreadcrumbItem {
  label: string;
  href: string;
}

export interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = '' } = Astro.props;
---

<nav aria-label="Breadcrumb" class={`bg-white border-b border-gray-200 ${className}`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <ol class="flex items-center space-x-2 py-4 text-sm">
      {items.map((item, index) => (
        <li class="flex items-center">
          {index > 0 && (
            <svg 
              class="w-4 h-4 text-gray-400 mx-2" 
              fill="currentColor" 
              viewBox="0 0 20 20"
              aria-hidden="true"
            >
              <path 
                fill-rule="evenodd" 
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" 
                clip-rule="evenodd" 
              />
            </svg>
          )}
          {index === items.length - 1 ? (
            <span class="text-gray-500" aria-current="page">
              {item.label}
            </span>
          ) : (
            <a 
              href={item.href} 
              class="text-sage-600 hover:text-sage-700 transition-colors duration-200"
            >
              {item.label}
            </a>
          )}
        </li>
      ))}
    </ol>
  </div>
</nav>