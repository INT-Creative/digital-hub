---
import type { ServiceDetail } from '../../../types/services';

export interface Props {
  service: ServiceDetail;
}

const { service } = Astro.props;

// Define transformation content based on service type
const transformationContent = {
  'website-development': {
    fromState: 'Invisible Online',
    toState: 'Lead-Generating Machine',
    timeline: '7-day turnaround',
    painPoints: ['Losing customers to competitors', 'No way to capture leads', 'Unprofessional appearance'],
    outcomes: ['300% increase in online inquiries', '24/7 lead capture', 'Professional brand perception'],
    icon: 'M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z'
  },
  'digital-marketing': {
    fromState: 'Scattered Marketing',
    toState: 'Predictable Customer Growth',
    timeline: '90-day system',
    painPoints: ['Wasting money on ads', 'Leads falling through cracks', 'No systematic approach'],
    outcomes: ['40% lower cost per lead', 'Automated follow-up', 'Predictable growth system'],
    icon: 'M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
  },
  'graphic-design': {
    fromState: 'Amateur Appearance',
    toState: 'Industry Authority',
    timeline: '14-day brand identity',
    painPoints: ['Unprofessional materials', 'Inconsistent branding', 'Cannot compete visually'],
    outcomes: ['Professional appearance', 'Premium pricing ability', 'Industry credibility'],
    icon: 'M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z'
  },
  'marketing-automation': {
    fromState: 'Manual Chaos',
    toState: 'Automated Efficiency',
    timeline: '21-day transformation',
    painPoints: ['Drowning in tasks', 'Missing follow-ups', 'Cannot scale processes'],
    outcomes: ['75% less manual work', '100% lead follow-up', 'Business that scales'],
    icon: 'M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z'
  }
};

const content = transformationContent[service.slug] || transformationContent['website-development'];
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-500 p-8 border border-gray-100 transform hover:-translate-y-2 transformation-card group relative overflow-hidden service-specific-${service.slug}" data-service={service.slug}>
  <!-- Service Icon -->
  <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-forest-900 to-sage-800 rounded-lg flex items-center justify-center mb-4 icon-container relative overflow-hidden group-hover:scale-110 transition-transform duration-300">
    <svg class="w-6 h-6 text-beige-50 service-icon transition-all duration-300 group-hover:rotate-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={content.icon}></path>
    </svg>
    <!-- Icon background energy -->
    <div class="absolute inset-0 bg-gradient-to-br from-sage-400/20 to-transparent rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>
  
  <!-- Transformation Headline -->
  <h3 class="text-xl font-bold text-forest-900 mb-3">
    From {content.fromState} to {content.toState}
  </h3>
  
  <!-- Before State (Pain Points) -->
  <div class="mb-4 before-state">
    <h4 class="text-sm font-semibold text-gray-500 uppercase mb-2">Before (Current Pain)</h4>
    <ul class="space-y-1">
      {content.painPoints.map((pain, index) => (
        <li class="flex items-start text-sm text-gray-600 pain-point opacity-100 group-hover:opacity-60 transition-all duration-300" style={`transition-delay: ${index * 100}ms`}>
          <span class="text-red-400 mr-2 mt-0.5 pain-x transform group-hover:rotate-45 transition-transform duration-300">×</span>
          <span class="pain-text relative">{pain}</span>
        </li>
      ))}
    </ul>
  </div>
  
  <!-- After State (Outcomes) -->
  <div class="mb-6 after-state">
    <h4 class="text-sm font-semibold text-sage-700 uppercase mb-2">After (Transformation)</h4>
    <ul class="space-y-1">
      {content.outcomes.map((outcome, index) => (
        <li class="flex items-start text-sm text-gray-700 outcome-item transform translate-x-2 group-hover:translate-x-0 opacity-80 group-hover:opacity-100 transition-all duration-300" style={`transition-delay: ${index * 100}ms`}>
          <span class="text-sage-600 mr-2 mt-0.5 checkmark transform scale-100 group-hover:scale-125 transition-transform duration-300">✓</span>
          <span class="outcome-text relative">
            {outcome}
            <div class="absolute -left-4 -top-1 opacity-0 group-hover:opacity-100 transition-opacity duration-500" style={`animation-delay: ${(index * 200) + 500}ms`}>
              <span class="text-sage-400 text-xs sparkle-indicator">✨</span>
            </div>
          </span>
        </li>
      ))}
    </ul>
  </div>
  
  <!-- Timeline Badge -->
  <div class="inline-flex items-center px-3 py-1 bg-sage-600/10 text-sage-700 text-sm font-medium rounded-full mb-4 timeline-badge relative overflow-hidden group-hover:bg-sage-600/20 transition-colors duration-300">
    <span class="relative z-10">{content.timeline}</span>
    <!-- Progress fill animation -->
    <div class="absolute inset-0 bg-gradient-to-r from-sage-600/20 to-sage-500/30 transform -translate-x-full group-hover:translate-x-0 transition-transform duration-700 ease-out"></div>
    <!-- Timeline pulse -->
    <div class="absolute -top-1 -right-1 w-2 h-2 bg-sage-500 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-ping transition-opacity duration-300"></div>
  </div>
  
  <!-- CTA -->
  <div class="flex items-center justify-between">
    <a 
      href={`#${service.slug}`}
      class="bg-sage-600 hover:bg-sage-700 text-white px-6 py-2 rounded-lg font-medium text-sm transition-all duration-300 inline-flex items-center cta-button relative overflow-hidden hover:scale-105 hover:shadow-lg group/cta"
    >
      <span class="relative z-10">Start Transformation</span>
      <svg 
        class="w-4 h-4 ml-1 group-hover/cta:translate-x-1 transition-transform duration-300" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
        aria-hidden="true"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
      <!-- Button energy effect -->
      <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transform -translate-x-full group-hover/cta:translate-x-full transition-transform duration-500"></div>
      <!-- Success particles -->
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0 group-hover/cta:opacity-100 transition-opacity duration-300">
        <div class="particle-burst w-1 h-1 bg-white rounded-full animate-particle-1"></div>
        <div class="particle-burst w-0.5 h-0.5 bg-white rounded-full animate-particle-2" style="margin-left: 8px; margin-top: -4px;"></div>
        <div class="particle-burst w-0.5 h-0.5 bg-white rounded-full animate-particle-3" style="margin-left: -12px; margin-top: 6px;"></div>
      </div>
    </a>
    {service.packageTier && (
      <div class="text-xs text-sage-700 font-medium capitalize pricing-tier transform group-hover:scale-105 transition-transform duration-300">
        {service.packageTier} pricing
      </div>
    )}
  </div>
  
  <!-- Transformation energy ripple -->
  <div class="absolute inset-0 border-2 border-sage-600/20 rounded-xl opacity-0 group-hover:opacity-100 transform scale-95 group-hover:scale-100 transition-all duration-500 pointer-events-none"></div>
  
  <!-- Celebration confetti -->
  <div class="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300 celebration-container">
    <div class="confetti-piece w-1 h-1 bg-sage-400 rounded-sm transform rotate-45 animate-confetti-1"></div>
    <div class="confetti-piece w-1 h-1 bg-sage-500 rounded-sm transform rotate-12 animate-confetti-2" style="margin-left: 6px; margin-top: -8px;"></div>
    <div class="confetti-piece w-0.5 h-0.5 bg-sage-300 rounded-sm transform -rotate-12 animate-confetti-3" style="margin-left: -10px; margin-top: 12px;"></div>
  </div>
</div>

<style>
  @keyframes float-1 {
    0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0.8; }
    50% { transform: translateY(-8px) rotate(180deg); opacity: 1; }
  }
  
  @keyframes float-2 {
    0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0.6; }
    50% { transform: translateY(-12px) rotate(-180deg); opacity: 1; }
  }
  
  @keyframes float-3 {
    0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0.7; }
    50% { transform: translateY(-6px) rotate(90deg); opacity: 1; }
  }
  
  .animate-float-1 { animation: float-1 3s ease-in-out infinite; }
  .animate-float-2 { animation: float-2 4s ease-in-out infinite 1s; }
  .animate-float-3 { animation: float-3 5s ease-in-out infinite 2s; }
  
  @keyframes particle-1 {
    0% { transform: translate(0, 0) scale(0); opacity: 1; }
    100% { transform: translate(10px, -10px) scale(1); opacity: 0; }
  }
  
  @keyframes particle-2 {
    0% { transform: translate(0, 0) scale(0); opacity: 1; }
    100% { transform: translate(-8px, -12px) scale(1); opacity: 0; }
  }
  
  @keyframes particle-3 {
    0% { transform: translate(0, 0) scale(0); opacity: 1; }
    100% { transform: translate(12px, -6px) scale(1); opacity: 0; }
  }
  
  .animate-particle-1 { animation: particle-1 0.6s ease-out infinite; }
  .animate-particle-2 { animation: particle-2 0.8s ease-out infinite 0.2s; }
  .animate-particle-3 { animation: particle-3 0.7s ease-out infinite 0.4s; }
  
  @keyframes confetti-1 {
    0% { transform: translateY(0) rotate(45deg) scale(0); opacity: 1; }
    100% { transform: translateY(20px) rotate(405deg) scale(1); opacity: 0; }
  }
  
  @keyframes confetti-2 {
    0% { transform: translateY(0) rotate(12deg) scale(0); opacity: 1; }
    100% { transform: translateY(25px) rotate(372deg) scale(1); opacity: 0; }
  }
  
  @keyframes confetti-3 {
    0% { transform: translateY(0) rotate(-12deg) scale(0); opacity: 1; }
    100% { transform: translateY(18px) rotate(348deg) scale(1); opacity: 0; }
  }
  
  .animate-confetti-1 { animation: confetti-1 1s ease-out infinite; }
  .animate-confetti-2 { animation: confetti-2 1.2s ease-out infinite 0.3s; }
  .animate-confetti-3 { animation: confetti-3 0.9s ease-out infinite 0.6s; }
  
  .sparkle-indicator {
    animation: sparkle-float 2s ease-in-out infinite;
  }
  
  @keyframes sparkle-float {
    0%, 100% { transform: translateY(0) scale(1); }
    50% { transform: translateY(-2px) scale(1.2); }
  }
  
  /* Service-Specific Transformations */
  .service-specific-website-development:hover .service-icon {
    animation: websiteBuild 2s ease-in-out infinite;
  }
  
  .service-specific-digital-marketing:hover .service-icon {
    animation: growthChart 2s ease-in-out infinite;
  }
  
  .service-specific-graphic-design:hover .service-icon {
    animation: designTransform 2s ease-in-out infinite;
  }
  
  .service-specific-marketing-automation:hover .service-icon {
    animation: gearRotation 2s ease-in-out infinite;
  }
  
  @keyframes websiteBuild {
    0%, 100% { transform: rotate(0deg) scale(1); }
    25% { transform: rotate(3deg) scale(1.05); }
    50% { transform: rotate(0deg) scale(1.1); }
    75% { transform: rotate(-3deg) scale(1.05); }
  }
  
  @keyframes growthChart {
    0%, 100% { transform: translateY(0) scale(1); }
    25% { transform: translateY(-2px) scale(1.02); }
    50% { transform: translateY(-4px) scale(1.05); }
    75% { transform: translateY(-2px) scale(1.02); }
  }
  
  @keyframes designTransform {
    0%, 100% { transform: rotate(0deg) scale(1) skew(0deg); }
    25% { transform: rotate(2deg) scale(1.03) skew(1deg); }
    50% { transform: rotate(0deg) scale(1.06) skew(0deg); }
    75% { transform: rotate(-2deg) scale(1.03) skew(-1deg); }
  }
  
  @keyframes gearRotation {
    0% { transform: rotate(0deg) scale(1); }
    25% { transform: rotate(90deg) scale(1.02); }
    50% { transform: rotate(180deg) scale(1.05); }
    75% { transform: rotate(270deg) scale(1.02); }
    100% { transform: rotate(360deg) scale(1); }
  }
  
  /* Service-specific color transformations */
  .service-specific-website-development:hover {
    background: linear-gradient(135deg, #ffffff 0%, #f0f9ff 100%);
  }
  
  .service-specific-digital-marketing:hover {
    background: linear-gradient(135deg, #ffffff 0%, #ecfdf5 100%);
  }
  
  .service-specific-graphic-design:hover {
    background: linear-gradient(135deg, #ffffff 0%, #fef7ff 100%);
  }
  
  .service-specific-marketing-automation:hover {
    background: linear-gradient(135deg, #ffffff 0%, #fff7ed 100%);
  }
  
  /* Enhanced confetti for different services */
  .service-specific-website-development .confetti-piece {
    background: linear-gradient(45deg, #3b82f6, #1d4ed8);
  }
  
  .service-specific-digital-marketing .confetti-piece {
    background: linear-gradient(45deg, #10b981, #047857);
  }
  
  .service-specific-graphic-design .confetti-piece {
    background: linear-gradient(45deg, #8b5cf6, #7c3aed);
  }
  
  .service-specific-marketing-automation .confetti-piece {
    background: linear-gradient(45deg, #f59e0b, #d97706);
  }
</style>