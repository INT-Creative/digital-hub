---
// Interactive visual storytelling component for portfolio case studies
// Transforms data into compelling before/after narratives with compliance
export interface Props {
  caseStudy: {
    title: string;
    clientResults: {
      timeframe: string;
      metric: string;
      keyOutcome: string;
    };
    beforeAfterMetrics: {
      metric: string;
      before: string;
      after: string;
      improvement: string;
    }[];
    processSteps: {
      phase: string;
      title: string;
      description: string;
      deliverables: string[];
      timeline: string;
    }[];
    challenges: string[];
    solutions: string[];
    clientInfo: {
      industry: string;
    };
  };
  showFullDisclaimer?: boolean;
}

const { caseStudy, showFullDisclaimer = true } = Astro.props;

// Industry-specific color schemes
const getIndustryColors = (industry: string) => {
  const colorSchemes = {
    'Health & Wellness': {
      primary: 'from-blue-500 to-cyan-400',
      secondary: 'from-green-400 to-emerald-500',
      accent: 'bg-blue-50 border-blue-200',
      text: 'text-blue-900'
    },
    'Home Services': {
      primary: 'from-orange-500 to-red-500',
      secondary: 'from-blue-500 to-indigo-600',
      accent: 'bg-orange-50 border-orange-200',
      text: 'text-orange-900'
    },
    'Legal Services': {
      primary: 'from-slate-700 to-slate-900',
      secondary: 'from-blue-600 to-blue-800',
      accent: 'bg-slate-50 border-slate-200',
      text: 'text-slate-900'
    },
    'Professional Services': {
      primary: 'from-indigo-600 to-purple-600',
      secondary: 'from-emerald-500 to-teal-600',
      accent: 'bg-indigo-50 border-indigo-200',
      text: 'text-indigo-900'
    },
    'Healthcare': {
      primary: 'from-teal-500 to-cyan-600',
      secondary: 'from-green-400 to-emerald-500',
      accent: 'bg-teal-50 border-teal-200',
      text: 'text-teal-900'
    },
    'Restaurant & Food Service': {
      primary: 'from-red-500 to-orange-500',
      secondary: 'from-yellow-400 to-orange-500',
      accent: 'bg-red-50 border-red-200',
      text: 'text-red-900'
    },
    'Fitness & Wellness': {
      primary: 'from-purple-500 to-pink-500',
      secondary: 'from-green-400 to-emerald-500',
      accent: 'bg-purple-50 border-purple-200',
      text: 'text-purple-900'
    },
    'default': {
      primary: 'from-forest-900 to-sage-800',
      secondary: 'from-sage-600 to-forest-700',
      accent: 'bg-sage-50 border-sage-200',
      text: 'text-forest-900'
    }
  };
  
  return colorSchemes[industry] || colorSchemes.default;
};

const colors = getIndustryColors(caseStudy.clientInfo.industry);

// Extract the primary metric for hero display
const primaryMetric = caseStudy.beforeAfterMetrics[0];

// Create visual hierarchy for metrics
const sortedMetrics = caseStudy.beforeAfterMetrics.sort((a, b) => {
  // Prioritize percentage improvements
  const aHasPercent = a.improvement.includes('%');
  const bHasPercent = b.improvement.includes('%');
  if (aHasPercent && !bHasPercent) return -1;
  if (!aHasPercent && bHasPercent) return 1;
  return 0;
});
---

<div class="transformation-storyboard bg-white rounded-2xl shadow-xl overflow-hidden">
  <!-- Legal Compliance Header -->
  {showFullDisclaimer && (
    <div class="bg-amber-100 border-b border-amber-200 px-6 py-3">
      <div class="flex items-center justify-center text-center">
        <svg class="w-5 h-5 text-amber-600 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
        </svg>
        <span class="text-sm font-medium text-amber-800">
          <strong>Demonstration Project:</strong> Fictional case study showcasing real methodology
        </span>
      </div>
    </div>
  )}

  <!-- Hero Section -->
  <div class={`relative px-6 py-12 bg-gradient-to-br ${colors.primary} text-white overflow-hidden`}>
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute top-10 left-10 w-20 h-20 bg-white rounded-full opacity-20"></div>
      <div class="absolute bottom-10 right-10 w-16 h-16 bg-white rounded-full opacity-15"></div>
      <div class="absolute top-1/2 left-1/4 w-12 h-12 bg-white rounded-full opacity-10"></div>
    </div>
    
    <div class="relative z-10 text-center max-w-4xl mx-auto">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">{caseStudy.title}</h2>
      <div class="text-xl md:text-2xl font-medium mb-6 text-white/90">
        {caseStudy.clientResults.keyOutcome}
      </div>
      
      <!-- Primary Metric Showcase -->
      <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-8 max-w-md mx-auto">
        <div class="text-4xl md:text-5xl font-bold mb-2">
          {caseStudy.clientResults.metric}
        </div>
        <div class="text-white/90 text-lg">
          Achieved in {caseStudy.clientResults.timeframe}
        </div>
      </div>
    </div>
  </div>

  <!-- Problem → Solution → Results Flow -->
  <div class="px-6 py-12">
    <div class="max-w-6xl mx-auto">
      <div class="grid lg:grid-cols-3 gap-8">
        
        <!-- Problems Section -->
        <div class="text-center">
          <div class="w-16 h-16 bg-red-100 text-red-600 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-4">The Challenge</h3>
          <div class="space-y-3">
            {caseStudy.challenges.slice(0, 3).map((challenge) => (
              <div class="bg-red-50 border border-red-200 rounded-lg p-3 text-sm text-red-800">
                {challenge}
              </div>
            ))}
          </div>
        </div>

        <!-- Process Arrow -->
        <div class="flex flex-col items-center justify-center lg:py-8">
          <div class={`w-16 h-16 bg-gradient-to-br ${colors.secondary} text-white rounded-full flex items-center justify-center mb-4`}>
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Transformation Process</h3>
          <div class="text-center">
            <div class="text-2xl font-bold text-sage-600">{caseStudy.processSteps.length} Steps</div>
            <div class="text-sm text-gray-600">Rapid Implementation</div>
          </div>
          
          <!-- Visual Process Flow -->
          <div class="mt-6 space-y-2">
            {caseStudy.processSteps.map((step, index) => (
              <div class="flex items-center text-sm">
                <div class={`w-6 h-6 rounded-full bg-gradient-to-br ${colors.secondary} text-white text-xs flex items-center justify-center mr-2`}>
                  {index + 1}
                </div>
                <span class="text-gray-700">{step.phase}</span>
              </div>
            ))}
          </div>
        </div>

        <!-- Results Section -->
        <div class="text-center">
          <div class="w-16 h-16 bg-green-100 text-green-600 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-4">The Results</h3>
          <div class="space-y-3">
            {sortedMetrics.slice(0, 3).map((metric) => (
              <div class="bg-green-50 border border-green-200 rounded-lg p-3">
                <div class="font-semibold text-green-800 text-sm">{metric.metric}</div>
                <div class="text-2xl font-bold text-green-900">{metric.improvement}</div>
                <div class="text-xs text-green-700">{metric.before} → {metric.after}</div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Interactive Metrics Dashboard -->
  <div class="bg-gray-50 px-6 py-12">
    <div class="max-w-6xl mx-auto">
      <div class="text-center mb-8">
        <h3 class="text-2xl font-bold text-gray-900 mb-2">Measurable Business Impact</h3>
        <p class="text-gray-600">Every transformation is tracked with specific, measurable outcomes</p>
      </div>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {caseStudy.beforeAfterMetrics.map((metric, index) => (
          <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-all duration-300 group">
            <h4 class="font-semibold text-gray-900 mb-4">{metric.metric}</h4>
            
            <!-- Before/After Visual Comparison -->
            <div class="space-y-3">
              <div class="flex items-center justify-between">
                <span class="text-sm text-red-600 font-medium">Before</span>
                <span class="text-lg font-bold text-red-700">{metric.before}</span>
              </div>
              
              <!-- Visual Progress Bar -->
              <div class="flex items-center">
                <div class="flex-1 h-2 bg-red-200 rounded-full overflow-hidden">
                  <div class="h-full bg-red-400 rounded-full transition-all duration-1000 group-hover:animate-pulse" style="width: 30%"></div>
                </div>
                <svg class="w-4 h-4 text-gray-400 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                </svg>
                <div class="flex-1 h-2 bg-green-200 rounded-full overflow-hidden">
                  <div class="h-full bg-green-500 rounded-full transition-all duration-1000 group-hover:animate-pulse" style="width: 85%"></div>
                </div>
              </div>
              
              <div class="flex items-center justify-between">
                <span class="text-sm text-green-600 font-medium">After</span>
                <span class="text-lg font-bold text-green-700">{metric.after}</span>
              </div>
            </div>
            
            <!-- Improvement Badge -->
            <div class="mt-4 text-center">
              <span class={`inline-block bg-gradient-to-r ${colors.secondary} text-white px-4 py-2 rounded-full text-sm font-bold`}>
                {metric.improvement}
              </span>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Process Timeline Visualization -->
  <div class="px-6 py-12">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-8">
        <h3 class="text-2xl font-bold text-gray-900 mb-2">Implementation Timeline</h3>
        <p class="text-gray-600">Rapid, systematic approach to business transformation</p>
      </div>
      
      <div class="space-y-6">
        {caseStudy.processSteps.map((step, index) => (
          <div class="relative flex items-start group">
            <!-- Timeline Line -->
            {index < caseStudy.processSteps.length - 1 && (
              <div class="absolute left-6 top-12 w-0.5 h-16 bg-gray-200 group-hover:bg-sage-300 transition-colors duration-300"></div>
            )}
            
            <!-- Step Number -->
            <div class={`w-12 h-12 bg-gradient-to-br ${colors.secondary} text-white rounded-full flex items-center justify-center flex-shrink-0 font-bold relative z-10 group-hover:scale-110 transition-transform duration-300`}>
              {index + 1}
            </div>
            
            <!-- Step Content -->
            <div class="ml-6 flex-1">
              <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-200 group-hover:shadow-md transition-all duration-300">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-3">
                  <div>
                    <div class={`text-sm font-medium mb-1 ${colors.text}`}>{step.phase}</div>
                    <h4 class="text-lg font-semibold text-gray-900">{step.title}</h4>
                  </div>
                  <div class="mt-2 md:mt-0">
                    <span class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                      {step.timeline}
                    </span>
                  </div>
                </div>
                
                <p class="text-gray-600 mb-4">{step.description}</p>
                
                <!-- Key Deliverables -->
                <div class="grid md:grid-cols-2 gap-2">
                  {step.deliverables.slice(0, 4).map((deliverable) => (
                    <div class="flex items-start text-sm text-gray-600">
                      <svg class="w-4 h-4 text-green-600 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                      </svg>
                      {deliverable}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Educational Value Section -->
  <div class={`${colors.accent} px-6 py-8`}>
    <div class="max-w-4xl mx-auto text-center">
      <div class="flex items-center justify-center mb-4">
        <svg class="w-6 h-6 text-blue-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253" />
        </svg>
        <h3 class="text-xl font-bold text-gray-900">Educational Demonstration</h3>
      </div>
      <p class="text-gray-700 mb-4">
        This case study demonstrates our methodology using a realistic industry scenario. 
        The same systematic approach and attention to detail would be applied to your specific business goals.
      </p>
      <div class="text-sm text-gray-600">
        <strong>Real Process + Your Business = Actual Results</strong>
      </div>
    </div>
  </div>

  <!-- Call to Action -->
  <div class={`px-6 py-12 bg-gradient-to-br ${colors.primary} text-white text-center`}>
    <div class="max-w-3xl mx-auto">
      <h3 class="text-2xl md:text-3xl font-bold mb-4">
        Ready for Your Transformation?
      </h3>
      <p class="text-xl text-white/90 mb-8">
        This demonstration shows how we approach business challenges. 
        Let's discuss applying these same strategies to your specific goals.
      </p>
      
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a 
          href="/contact"
          class="bg-white text-gray-900 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gray-100 transition-colors duration-300 shadow-lg hover:shadow-xl"
        >
          Discuss Your Project
        </a>
        <a 
          href="/portfolio"
          class="bg-white/20 backdrop-blur-sm text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white/30 transition-colors duration-300 border border-white/30"
        >
          View More Examples
        </a>
      </div>
    </div>
  </div>
</div>

<style>
  .transformation-storyboard {
    /* Custom animations for metric reveals */
  }
  
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  .group:hover .animate-pulse {
    animation: pulse 1s infinite;
  }
  
  /* Progressive enhancement for interaction */
  @media (hover: hover) {
    .transformation-storyboard .group:hover {
      transform: translateY(-2px);
    }
  }
  
  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .transformation-storyboard * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<script>
  // Progressive enhancement for interactive elements
  document.addEventListener('DOMContentLoaded', function() {
    // Animate metrics when they come into view
    const observerOptions = {
      threshold: 0.3,
      rootMargin: '0px 0px -100px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.animation = 'slideInUp 0.6s ease-out forwards';
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    // Observe all metric cards
    const metricCards = document.querySelectorAll('.transformation-storyboard .group');
    metricCards.forEach(card => {
      observer.observe(card);
    });
    
    // Add click tracking for analytics
    const ctaButtons = document.querySelectorAll('.transformation-storyboard a[href^="/contact"]');
    ctaButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Track CTA clicks for optimization
        if (typeof gtag !== 'undefined') {
          gtag('event', 'portfolio_cta_click', {
            'case_study': '{caseStudy.title}',
            'industry': '{caseStudy.clientInfo.industry}'
          });
        }
      });
    });
  });
</script>