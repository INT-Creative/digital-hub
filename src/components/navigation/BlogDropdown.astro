---
import { blogData } from '../../data/blog';

export interface Props {
  currentPath?: string;
}

const { currentPath = "" } = Astro.props;

// Blog navigation items based on categories
const blogNavItems = blogData.categories.map(category => ({
  name: category.name,
  href: `/blog/category/${category.slug}`,
  description: category.description,
  icon: category.icon,
  color: category.color
}));

const isBlogActive = currentPath.startsWith("/blog");

// Get color classes for category icons
const getCategoryIconColor = (color: string) => {
  const colorMap: Record<string, string> = {
    'forest': 'text-forest-600',
    'sage': 'text-sage-600',
    'blue': 'text-blue-600', 
    'purple': 'text-purple-600',
    'green': 'text-green-600',
    'orange': 'text-orange-600'
  };
  return colorMap[color] || 'text-sage-600';
};
---

<!-- Desktop Blog Dropdown -->
<div class="relative group blog-dropdown">
  <a
    href="/blog"
    class={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 flex items-center ${
      isBlogActive
        ? "bg-forest-100 text-forest-900"
        : "text-gray-700 hover:text-forest-900 hover:bg-gray-50"
    }`}
  >
    Blog
    <svg 
      class="w-4 h-4 ml-1 transition-transform duration-200 group-hover:rotate-180" 
      fill="none" 
      stroke="currentColor" 
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </a>
  
  <!-- Dropdown Menu -->
  <div class="absolute left-0 mt-2 w-96 bg-white rounded-xl shadow-xl border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform translate-y-2 group-hover:translate-y-0 z-50">
    <!-- Dropdown Arrow -->
    <div class="absolute -top-1 left-4 w-2 h-2 bg-white border-l border-t border-gray-200 transform rotate-45"></div>
    
    <div class="p-4">
      <!-- All Blog Posts Link -->
      <div class="mb-4 pb-4 border-b border-gray-100">
        <a 
          href="/blog" 
          class="block text-forest-900 font-semibold hover:text-sage-700 transition-colors duration-200"
        >
          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2 text-sage-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
              </svg>
              <span>All Blog Posts</span>
            </div>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </div>
          <p class="text-sm text-gray-600 mt-1 ml-7">Latest business transformation insights</p>
        </a>
      </div>
      
      <!-- Blog Categories -->
      <div class="grid grid-cols-2 gap-3">
        {blogNavItems.map((category) => (
          <a 
            href={category.href}
            class="block p-3 rounded-lg hover:bg-gray-50 transition-colors duration-200 group/item"
          >
            <div class="flex items-start">
              <div class="flex-shrink-0">
                <svg 
                  class={`w-5 h-5 mt-0.5 ${getCategoryIconColor(category.color)} group-hover/item:scale-110 transition-transform duration-200`}
                  fill="none" 
                  stroke="currentColor" 
                  viewBox="0 0 24 24"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={category.icon} />
                </svg>
              </div>
              <div class="ml-3 flex-1">
                <h4 class="text-sm font-medium text-gray-900 group-hover/item:text-sage-700 transition-colors duration-200 leading-snug">
                  {category.name}
                </h4>
                <p class="text-xs text-gray-600 mt-1 line-clamp-2 leading-relaxed">
                  {category.description}
                </p>
              </div>
            </div>
          </a>
        ))}
      </div>
      
      <!-- Featured/Recent Posts Preview -->
      <div class="mt-4 pt-4 border-t border-gray-100">
        <div class="flex items-center justify-between mb-3">
          <h4 class="text-sm font-medium text-gray-900">Featured Articles</h4>
          <a 
            href="/blog?featured=true" 
            class="text-xs text-sage-600 hover:text-sage-700 font-medium"
          >
            View all â†’
          </a>
        </div>
        
        <!-- Mini Featured Posts -->
        {blogData.featuredPosts.slice(0, 2).map((post) => (
          <a 
            href={`/blog/${post.slug}`}
            class="block p-2 rounded-lg hover:bg-gray-50 transition-colors duration-200 mb-2 last:mb-0"
          >
            <h5 class="text-sm font-medium text-gray-900 line-clamp-2 leading-tight">
              {post.title}
            </h5>
            <p class="text-xs text-gray-600 mt-1">
              {post.readingTime}min read
            </p>
          </a>
        ))}
      </div>
    </div>
  </div>
</div>

<!-- Mobile Blog Accordion (for mobile navigation) -->
<div class="mobile-blog-accordion md:hidden">
  <button 
    type="button"
    class={`w-full flex items-center justify-between px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
      isBlogActive
        ? "bg-forest-100 text-forest-900"
        : "text-gray-700 hover:text-forest-900 hover:bg-gray-50"
    }`}
  >
    <span>Blog</span>
    <svg 
      class="w-4 h-4 transition-transform duration-200 blog-chevron" 
      fill="none" 
      stroke="currentColor" 
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>
  
  <!-- Mobile Blog Submenu -->
  <div class="blog-submenu max-h-0 overflow-hidden transition-all duration-300 ease-out">
    <div class="pl-4 py-2 space-y-2">
      <a 
        href="/blog"
        class="block px-3 py-2 text-sm text-gray-600 hover:text-forest-900 hover:bg-gray-50 rounded transition-colors duration-200"
      >
        All Posts
      </a>
      {blogNavItems.map((category) => (
        <a 
          href={category.href}
          class="block px-3 py-2 text-sm text-gray-600 hover:text-forest-900 hover:bg-gray-50 rounded transition-colors duration-200"
        >
          {category.name}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  // Mobile accordion functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileAccordion = document.querySelector('.mobile-blog-accordion');
    const accordionButton = mobileAccordion?.querySelector('button');
    const submenu = mobileAccordion?.querySelector('.blog-submenu');
    const chevron = mobileAccordion?.querySelector('.blog-chevron');
    
    accordionButton?.addEventListener('click', function() {
      const isOpen = submenu?.style.maxHeight && submenu.style.maxHeight !== '0px';
      
      if (isOpen) {
        submenu.style.maxHeight = '0px';
        chevron?.classList.remove('rotate-180');
      } else {
        submenu.style.maxHeight = submenu.scrollHeight + 'px';
        chevron?.classList.add('rotate-180');
      }
    });
  });
</script>

<style>
  /* Enhanced dropdown styles */
  .blog-dropdown:hover .group-hover\:opacity-100 {
    opacity: 1;
  }
  
  .blog-dropdown:hover .group-hover\:visible {
    visibility: visible;
  }
  
  .blog-dropdown:hover .group-hover\:translate-y-0 {
    transform: translateY(0);
  }
  
  /* Mobile accordion animations */
  .blog-submenu {
    transition: max-height 0.3s ease-out;
  }
  
  .blog-chevron {
    transition: transform 0.2s ease-out;
  }
  
  /* Line clamp for descriptions */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Ensure dropdown stays open on hover */
  .blog-dropdown > div {
    pointer-events: none;
  }
  
  .blog-dropdown:hover > div {
    pointer-events: auto;
  }
</style>