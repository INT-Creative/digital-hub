---
import { servicesData } from '../../data/services';

export interface Props {
  currentPath?: string;
}

const { currentPath = "" } = Astro.props;

// Service navigation items
const serviceNavItems = [
  { 
    name: 'Website Development', 
    href: '/services/website-development',
    description: '7-day conversion site sprint',
    pricing: '$2,500 - $7,500'
  },
  { 
    name: 'Digital Marketing', 
    href: '/services/digital-marketing',
    description: 'Campaign management & automation',
    pricing: '$2,000 - $5,000'
  },
  { 
    name: 'Graphic Design', 
    href: '/services/graphic-design',
    description: 'Professional brand identity',
    pricing: '$1,200 - $3,500'
  },
  { 
    name: 'Marketing Automation', 
    href: '/services/marketing-automation',
    description: 'Business process systems',
    pricing: '$1,500 - $4,000'
  }
];

const isServicesActive = currentPath.startsWith("/services");
---

<!-- Desktop Services Dropdown -->
<div class="relative group services-dropdown">
  <a
    href="/services"
    class={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 flex items-center ${
      isServicesActive
        ? "bg-forest-100 text-forest-900"
        : "text-gray-700 hover:text-forest-900 hover:bg-gray-50"
    }`}
  >
    Services
    <svg 
      class="w-4 h-4 ml-1 transition-transform duration-200 group-hover:rotate-180" 
      fill="none" 
      stroke="currentColor" 
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </a>
  
  <!-- Dropdown Menu -->
  <div class="absolute left-0 mt-2 w-80 bg-white rounded-xl shadow-xl border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform translate-y-2 group-hover:translate-y-0 z-50">
    <!-- Dropdown Arrow -->
    <div class="absolute -top-1 left-4 w-2 h-2 bg-white border-l border-t border-gray-200 transform rotate-45"></div>
    
    <div class="p-4">
      <!-- All Services Link -->
      <div class="mb-4 pb-4 border-b border-gray-100">
        <a 
          href="/services" 
          class="block text-forest-900 font-semibold hover:text-sage-700 transition-colors duration-200"
        >
          <div class="flex items-center justify-between">
            <span>All Services</span>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </div>
          <p class="text-sm text-gray-600 mt-1">Complete transformation solutions</p>
        </a>
      </div>
      
      <!-- Individual Services -->
      <div class="space-y-3">
        {serviceNavItems.map((service) => (
          <a 
            href={service.href}
            class="block p-3 rounded-lg hover:bg-gray-50 transition-colors duration-200 group/item"
          >
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <h4 class="font-medium text-gray-900 group-hover/item:text-sage-700 transition-colors duration-200">
                  {service.name}
                </h4>
                <p class="text-sm text-gray-600 mt-1">
                  {service.description}
                </p>
                <p class="text-xs text-sage-600 font-medium mt-1">
                  {service.pricing}
                </p>
              </div>
              <svg 
                class="w-4 h-4 text-gray-400 group-hover/item:text-sage-600 transition-colors duration-200 flex-shrink-0 ml-2" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </div>
          </a>
        ))}
      </div>
      
      <!-- CTA Section -->
      <div class="mt-4 pt-4 border-t border-gray-100">
        <p class="text-xs text-gray-600 text-center">
          {servicesData.globalCTA.helper}
        </p>
      </div>
    </div>
  </div>
</div>

<!-- Mobile Services Accordion (for mobile navigation) -->
<div class="mobile-services-accordion md:hidden">
  <button 
    type="button"
    class={`w-full flex items-center justify-between px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
      isServicesActive
        ? "bg-forest-100 text-forest-900"
        : "text-gray-700 hover:text-forest-900 hover:bg-gray-50"
    }`}
  >
    <span>Services</span>
    <svg 
      class="w-4 h-4 transition-transform duration-200 services-chevron" 
      fill="none" 
      stroke="currentColor" 
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>
  
  <!-- Mobile Services Submenu -->
  <div class="services-submenu max-h-0 overflow-hidden transition-all duration-300 ease-out">
    <div class="pl-4 py-2 space-y-2">
      <a 
        href="/services"
        class="block px-3 py-2 text-sm text-gray-600 hover:text-forest-900 hover:bg-gray-50 rounded transition-colors duration-200"
      >
        All Services
      </a>
      {serviceNavItems.map((service) => (
        <a 
          href={service.href}
          class="block px-3 py-2 text-sm text-gray-600 hover:text-forest-900 hover:bg-gray-50 rounded transition-colors duration-200"
        >
          {service.name}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  // Mobile accordion functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileAccordion = document.querySelector('.mobile-services-accordion');
    const accordionButton = mobileAccordion?.querySelector('button');
    const submenu = mobileAccordion?.querySelector('.services-submenu');
    const chevron = mobileAccordion?.querySelector('.services-chevron');
    
    accordionButton?.addEventListener('click', function() {
      const isOpen = submenu?.style.maxHeight && submenu.style.maxHeight !== '0px';
      
      if (isOpen) {
        submenu.style.maxHeight = '0px';
        chevron?.classList.remove('rotate-180');
      } else {
        submenu.style.maxHeight = submenu.scrollHeight + 'px';
        chevron?.classList.add('rotate-180');
      }
    });
  });
</script>

<style>
  /* Enhanced dropdown styles */
  .services-dropdown:hover .group-hover\:opacity-100 {
    opacity: 1;
  }
  
  .services-dropdown:hover .group-hover\:visible {
    visibility: visible;
  }
  
  .services-dropdown:hover .group-hover\:translate-y-0 {
    transform: translateY(0);
  }
  
  /* Mobile accordion animations */
  .services-submenu {
    transition: max-height 0.3s ease-out;
  }
  
  .services-chevron {
    transition: transform 0.2s ease-out;
  }
  
  /* Ensure dropdown stays open on hover */
  .services-dropdown > div {
    pointer-events: none;
  }
  
  .services-dropdown:hover > div {
    pointer-events: auto;
  }
</style>